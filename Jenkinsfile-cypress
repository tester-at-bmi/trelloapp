pipeline {

    agent any

    parameters {
        string(name: 'SPEC', defaultValue: 'cypress/e2e/**/**', description: '')
        choice(name: 'BROWSER', choices: ['chrome', 'edge', 'firefox', 'webkit'], description: '')
    }

    options {
        ansiColor('xterm')
    }

    tools {
        nodejs 'node'
    }

    stages {
        stage('Install Dependencies') {
            options {
                timeout(time: 5, unit: 'MINUTES')
            }
            steps {
                script {
                    if (isUnix()) {
                        sh "npm i --force --legacy-peer-deps"
                        sh "npx playwright install-deps webkit"
                    } else {
                        bat "npm i --force --legacy-peer-deps"
                    }
                }
            }
        }

        stage('Start Application') {
            options {
                timeout(time: 5, unit: 'MINUTES')
            }
            steps {
                script {
                    if (isUnix()) {
                        sh 'npm run start'
                    } else {
                        bat 'npm run start && npx cypress run -b ${BROWSER} --spec ${SPEC} --env grepTags=@${BROWSER} --headless'
                    }
                    return;
                }
            }
        }

        stage('Start Tests') {
            options {
                timeout(time: 5, unit: 'MINUTES')
            }
            steps {
                script {
                    if (isUnix()) {
                        sh "npx cypress run -b ${BROWSER} --spec ${SPEC} --env grepTags=@${BROWSER} --headless"
                    } else {
                        bat "npx cypress run -b ${BROWSER} --spec ${SPEC} --env grepTags=@${BROWSER} --headless"
                    }
                }
            }
        }

        stage('Generate HTML Report') {
            options {
                timeout(time: 5, unit: 'MINUTES')
            }
            steps {
                script {
                    if (isUnix()) {
                        sh "npm run cy:posttest"
                    } else {
                        bat "npm run cy:posttest"
                    }
                }
            }
        }

        stage('Deploy') {
            options {
                timeout(time: 5, unit: 'MINUTES')
            }
            steps {
                echo "Deploying the application"
            }
        }
    }

    post {
        always {
            publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'cypress-report', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: ''])
        }
    }
}